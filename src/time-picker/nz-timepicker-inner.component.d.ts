import { OnInit, ChangeDetectorRef } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
export interface TimeUnitInterface {
    index: number;
    name: string;
    disabled: boolean;
}
export declare class NzTimePickerInnerComponent implements OnInit, ControlValueAccessor {
    _cdr: ChangeDetectorRef;
    _now: Date;
    _el: HTMLElement;
    _open: boolean;
    _hourList: Array<TimeUnitInterface>;
    _minuteList: Array<TimeUnitInterface>;
    _secondList: Array<TimeUnitInterface>;
    _value: any;
    _selectedHour: number;
    _selectedMinute: number;
    _selectedSecond: number;
    _format: string;
    _showHour: boolean;
    _showMinute: boolean;
    _showSecond: boolean;
    _width: string;
    _hideDisabledOptions: boolean;
    onChange: any;
    onTouched: any;
    _hourListInstance: any;
    _minuteListInstance: any;
    _inputTimeInstance: any;
    _secondListInstance: any;
    nzHideDisabledOptions: boolean | string;
    nzPlaceHolder: string;
    nzSize: 'small' | 'large' | 'default';
    nzDisabledHours: any;
    nzDisabledMinutes: any;
    nzDisabledSeconds: any;
    nzDisabled: boolean;
    nzFormat: string;
    nzValue: Date;
    _scrollToSelected(instance: any, index: any, duration: number, unit: any): void;
    scrollTo(element: any, to: any, duration: any): void;
    _selectHour(instance: any, index: any, disabled: any): void;
    _selectMinute(instance: any, index: any, disabled: any): void;
    _selectSecond(instance: any, index: any, disabled: any): void;
    _translateIndex(index: any, unit: any): any;
    _calcIndex(array: any, index: any): any;
    _initPosition(): void;
    _buildTime(): void;
    _buildHours(): void;
    _buildMinutes(): void;
    _buildSeconds(): void;
    writeValue(value: any): void;
    registerOnChange(fn: (_: any) => {}): void;
    registerOnTouched(fn: () => {}): void;
    setDisabledState(isDisabled: boolean): void;
    constructor(_cdr: ChangeDetectorRef);
    ngOnInit(): void;
}
